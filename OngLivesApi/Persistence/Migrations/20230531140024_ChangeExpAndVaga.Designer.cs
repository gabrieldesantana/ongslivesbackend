// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ONGLIVES.API.Persistence.Context;

#nullable disable

namespace ONGLIVES.API.Persistence.Migrations
{
    [DbContext(typeof(OngLivesContext))]
    [Migration("20230531140024_ChangeExpAndVaga")]
    partial class ChangeExpAndVaga
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ONGLIVES.API.Entidades.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnderecoLinha")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Latitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Pais")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TB_Enderecos");
                });

            modelBuilder.Entity("ONGLIVES.API.Entidades.Experiencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Actived")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataExperienciaFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataExperienciaInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataPostagem")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdOng")
                        .HasColumnType("int");

                    b.Property<int>("IdVoluntario")
                        .HasColumnType("int");

                    b.Property<string>("NomeOng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeVoluntario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Nota")
                        .HasColumnType("int");

                    b.Property<int?>("OngId")
                        .HasColumnType("int");

                    b.Property<string>("Opiniao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjetoEnvolvido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VoluntarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OngId");

                    b.HasIndex("VoluntarioId");

                    b.ToTable("TB_Experiencias");
                });

            modelBuilder.Entity("ONGLIVES.API.Entidades.Imagem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Actived")
                        .HasColumnType("bit");

                    b.Property<byte[]>("Conteudo")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TB_Imagens");
                });

            modelBuilder.Entity("ONGLIVES.API.Entidades.Ong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Actived")
                        .HasColumnType("bit");

                    b.Property<string>("AreaAtuacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CNPJ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EnderecoId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuantidadeEmpregados")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId");

                    b.ToTable("TB_Ongs");
                });

            modelBuilder.Entity("ONGLIVES.API.Entidades.OngFinanceiro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Actived")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdOng")
                        .HasColumnType("int");

                    b.Property<int?>("OngId")
                        .HasColumnType("int");

                    b.Property<string>("Origem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OngId");

                    b.ToTable("TB_OngFinanceiros");
                });

            modelBuilder.Entity("ONGLIVES.API.Entidades.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Actived")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Perfil")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TB_Usuarios");
                });

            modelBuilder.Entity("ONGLIVES.API.Entidades.Vaga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Actived")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Disponivel")
                        .HasColumnType("bit");

                    b.Property<string>("Habilidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdOng")
                        .HasColumnType("int");

                    b.Property<int>("IdVoluntario")
                        .HasColumnType("int");

                    b.Property<int?>("OngId")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Turno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VoluntarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OngId");

                    b.HasIndex("VoluntarioId");

                    b.ToTable("TB_Vagas");
                });

            modelBuilder.Entity("ONGLIVES.API.Entidades.Voluntario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Actived")
                        .HasColumnType("bit");

                    b.Property<double>("Avaliacao")
                        .HasColumnType("float");

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EnderecoId")
                        .HasColumnType("int");

                    b.Property<string>("Escolaridade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Habilidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HorasVoluntaria")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuantidadeExperiencias")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId");

                    b.ToTable("TB_Voluntarios");
                });

            modelBuilder.Entity("ONGLIVES.API.Entidades.Experiencia", b =>
                {
                    b.HasOne("ONGLIVES.API.Entidades.Ong", "Ong")
                        .WithMany()
                        .HasForeignKey("OngId");

                    b.HasOne("ONGLIVES.API.Entidades.Voluntario", "Voluntario")
                        .WithMany()
                        .HasForeignKey("VoluntarioId");

                    b.Navigation("Ong");

                    b.Navigation("Voluntario");
                });

            modelBuilder.Entity("ONGLIVES.API.Entidades.Ong", b =>
                {
                    b.HasOne("ONGLIVES.API.Entidades.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("ONGLIVES.API.Entidades.OngFinanceiro", b =>
                {
                    b.HasOne("ONGLIVES.API.Entidades.Ong", null)
                        .WithMany("Financeiros")
                        .HasForeignKey("OngId");
                });

            modelBuilder.Entity("ONGLIVES.API.Entidades.Vaga", b =>
                {
                    b.HasOne("ONGLIVES.API.Entidades.Ong", "Ong")
                        .WithMany("Vagas")
                        .HasForeignKey("OngId");

                    b.HasOne("ONGLIVES.API.Entidades.Voluntario", "Voluntario")
                        .WithMany()
                        .HasForeignKey("VoluntarioId");

                    b.Navigation("Ong");

                    b.Navigation("Voluntario");
                });

            modelBuilder.Entity("ONGLIVES.API.Entidades.Voluntario", b =>
                {
                    b.HasOne("ONGLIVES.API.Entidades.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("ONGLIVES.API.Entidades.Ong", b =>
                {
                    b.Navigation("Financeiros");

                    b.Navigation("Vagas");
                });
#pragma warning restore 612, 618
        }
    }
}
